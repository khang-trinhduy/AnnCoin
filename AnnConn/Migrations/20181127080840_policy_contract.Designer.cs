// <auto-generated />
using System;
using AnnConn.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AnnConn.Migrations
{
    [DbContext(typeof(AnnContext))]
    [Migration("20181127080840_policy_contract")]
    partial class policy_contract
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AnnConn.Models.Administrator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email");

                    b.Property<string>("fullName");

                    b.Property<string>("password");

                    b.HasKey("ID");

                    b.ToTable("Administrator");
                });

            modelBuilder.Entity("AnnConn.Models.Appoinment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<double>("Cash");

                    b.Property<string>("Cmnd");

                    b.Property<bool>("Confirm");

                    b.Property<int>("Contract");

                    b.Property<string>("Customer")
                        .IsRequired();

                    b.Property<string>("DType")
                        .IsRequired();

                    b.Property<DateTime>("Day");

                    b.Property<string>("Deposit");

                    b.Property<string>("Details");

                    b.Property<string>("Email");

                    b.Property<string>("Gender")
                        .IsRequired();

                    b.Property<string>("HKTT")
                        .IsRequired();

                    b.Property<string>("Job");

                    b.Property<double>("Money");

                    b.Property<int>("NCH1");

                    b.Property<int>("NCH2");

                    b.Property<int>("NCH21");

                    b.Property<int>("NCH3");

                    b.Property<int>("NMS");

                    b.Property<int>("NS");

                    b.Property<int>("NSH");

                    b.Property<int>("NSHH");

                    b.Property<bool>("New");

                    b.Property<string>("Note");

                    b.Property<bool>("Official");

                    b.Property<bool>("OldContract");

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<string>("Place");

                    b.Property<double>("Price");

                    b.Property<string>("Purpose")
                        .IsRequired();

                    b.Property<string>("Requires");

                    b.Property<string>("SaleDetails");

                    b.Property<int?>("SaleID");

                    b.Property<string>("WorkPlace");

                    b.Property<string>("cTime");

                    b.Property<string>("dTime");

                    b.Property<string>("password")
                        .IsRequired();

                    b.Property<int>("ph");

                    b.Property<int>("pms");

                    b.Property<int>("pns");

                    b.Property<int>("psh");

                    b.Property<int>("pshh");

                    b.Property<string>("sale");

                    b.Property<bool>("supporter");

                    b.HasKey("ID");

                    b.HasIndex("SaleID");

                    b.ToTable("appoinment");
                });

            modelBuilder.Entity("AnnConn.Models.Collaborators", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("birthday");

                    b.Property<string>("city");

                    b.Property<string>("cmnd");

                    b.Property<DateTime>("day");

                    b.Property<string>("district");

                    b.Property<string>("email");

                    b.Property<string>("field");

                    b.Property<string>("fullName");

                    b.Property<string>("gender");

                    b.Property<string>("house");

                    b.Property<DateTime>("joinDate");

                    b.Property<string>("nation");

                    b.Property<string>("office");

                    b.Property<string>("office_name");

                    b.Property<string>("password");

                    b.Property<string>("phone");

                    b.Property<string>("place");

                    b.Property<string>("policy");

                    b.Property<string>("position");

                    b.Property<string>("town");

                    b.Property<string>("zip");

                    b.HasKey("ID");

                    b.ToTable("Collaborators");
                });

            modelBuilder.Entity("AnnConn.Models.Contracts", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CollaboratorsID");

                    b.Property<string>("c1");

                    b.Property<string>("c2");

                    b.Property<string>("c3");

                    b.Property<double>("charge");

                    b.Property<string>("code");

                    b.Property<string>("collabor");

                    b.Property<string>("condition");

                    b.Property<string>("customer");

                    b.Property<DateTime>("d1");

                    b.Property<DateTime>("d2");

                    b.Property<DateTime>("d3");

                    b.Property<int>("day1");

                    b.Property<int>("day2");

                    b.Property<int>("day3");

                    b.Property<DateTime>("dl1");

                    b.Property<DateTime>("dl2");

                    b.Property<DateTime>("dl3");

                    b.Property<string>("email");

                    b.Property<double>("f1");

                    b.Property<double>("f2");

                    b.Property<double>("f3");

                    b.Property<string>("note");

                    b.Property<DateTime>("pDate");

                    b.Property<string>("phone");

                    b.Property<string>("policy");

                    b.Property<string>("r1");

                    b.Property<string>("r2");

                    b.Property<string>("r3");

                    b.Property<string>("s1");

                    b.Property<string>("s2");

                    b.Property<string>("s3");

                    b.HasKey("ID");

                    b.HasIndex("CollaboratorsID");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("AnnConn.Models.Customers", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CollaboratorsID");

                    b.Property<int>("cNumber");

                    b.Property<string>("ch");

                    b.Property<double>("charges");

                    b.Property<string>("condition");

                    b.Property<string>("email");

                    b.Property<string>("name")
                        .IsRequired();

                    b.Property<string>("note");

                    b.Property<DateTime>("pDate");

                    b.Property<int>("pNumber");

                    b.Property<string>("phone")
                        .IsRequired();

                    b.Property<string>("policy");

                    b.Property<double>("price");

                    b.Property<string>("provider");

                    b.Property<string>("q4a");

                    b.Property<bool>("q5a");

                    b.Property<bool>("q5b");

                    b.Property<bool>("q5c");

                    b.Property<bool>("q5d");

                    b.Property<bool>("q6a");

                    b.Property<bool>("q6b");

                    b.Property<bool>("q6c");

                    b.Property<bool>("q7a");

                    b.Property<bool>("q7b");

                    b.Property<bool>("q7c");

                    b.Property<bool>("q7d");

                    b.Property<bool>("q7e");

                    b.Property<bool>("q7f");

                    b.Property<bool>("q7g");

                    b.Property<bool>("q7h");

                    b.Property<bool>("q7i");

                    b.Property<bool>("q7j");

                    b.Property<bool>("q7k");

                    b.Property<bool>("q7l");

                    b.Property<bool>("q7m");

                    b.Property<bool>("signed");

                    b.Property<string>("supporter");

                    b.Property<double>("totals");

                    b.HasKey("ID");

                    b.HasIndex("CollaboratorsID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("AnnConn.Models.Sale", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("display");

                    b.Property<string>("email")
                        .IsRequired();

                    b.Property<string>("info");

                    b.Property<string>("name")
                        .IsRequired();

                    b.Property<string>("pass")
                        .IsRequired();

                    b.Property<string>("phone")
                        .IsRequired();

                    b.Property<string>("type");

                    b.HasKey("ID");

                    b.ToTable("sale");
                });

            modelBuilder.Entity("AnnConn.Models.Appoinment", b =>
                {
                    b.HasOne("AnnConn.Models.Sale")
                        .WithMany("meetings")
                        .HasForeignKey("SaleID");
                });

            modelBuilder.Entity("AnnConn.Models.Contracts", b =>
                {
                    b.HasOne("AnnConn.Models.Collaborators")
                        .WithMany("contracts")
                        .HasForeignKey("CollaboratorsID");
                });

            modelBuilder.Entity("AnnConn.Models.Customers", b =>
                {
                    b.HasOne("AnnConn.Models.Collaborators")
                        .WithMany("customers")
                        .HasForeignKey("CollaboratorsID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
